  !**************************************************************************!
  !  subroutine  createMeshGen2:                                           !
  !                                                                          !
  !  Berechnet die Gitter2D Punkten (Punkten-Element Format)                 !
  ! funktioniert nur aber, wenn 400 Punkten und 81 Elementen                 !
  ! (8-Punkt-Elementen) vorhanden sind.                                      !
  !**************************************************************************!
  subroutine createMeshGen2(Mesh2D)

  use types

  implicit none

  !--------------------------------------------------------------------------!
  ! Variablendeklarationen                                                   !
  !--------------------------------------------------------------------------!
  ! Liste der übergebenen Argumente                                          !
  !                                                                          !
  type(tMeshGen)             :: Mesh2D     ! Gitterwerte                     !
  !                                                                          !
  ! Local variable declaration                                               !
  !    
  !
  integer                    :: i,j,k,n,el ! Zählvariablen                   !
  !--------------------------------------------------------------------------!
  intent(inout)              :: Mesh2D
  !--------------------------------------------------------------------------!
   
  n=0
  do i= 0,18 ! Fuellt 361 Punkten aus aber 81 davon werden nicht benutzt
    do j= 0,18
      Mesh2D%x(j*19+i+1)   = X1(i+1)  ! Index min ist 1, max ist 361 OK 
      Mesh2D%z(j*19+i+1)   = Z1(i+1)
      Mesh2D%y(j*19+i+1)   = -1.0 + real(j,8)*0.11111
      n=n+1
    enddo
  enddo 
!  Mesh2D%nodes = n

  el=0
  do i= 0,8
    do j= 0,8
      k = 2*j*19+2*i+1    ! min ist 1, max ist 321
      Mesh2D%quad(1, j*9+i+1)   = k
      Mesh2D%quad(3, j*9+i+1)   = k+2
      Mesh2D%quad(5, j*9+i+1)   = k+40    ! Index min ist 41, max ist 361=19*19 OK
      Mesh2D%quad(7, j*9+i+1)   = k+38

      Mesh2D%quad(2, j*9+i+1)   = k+1
      Mesh2D%quad(4, j*9+i+1)   = k+21
      Mesh2D%quad(6, j*9+i+1)   = k+39
      Mesh2D%quad(8, j*9+i+1)   = k+19
      el=el+1
    enddo
  enddo
!  Mesh2D%elmts = el

!  n=0
!  do i= 0,8
!    k = 8*9+i+1
!    Mesh2D%quadtop(i+1)   = k
!    n=n+1
!  enddo
!  Mesh2D%ntop = n

!  n=0
!  do i= 0,8
!    k = i+1
!    Mesh2D%quadbottom(i+1)   = k
!    n=n+1
!  enddo
!  Mesh2D%nbottom = n

!  n=0
!  do j= 0,8
!    k = j*9+9+1
!    Mesh2D%quadright(j+1)   = k
!    n=n+1
!  enddo
!  Mesh2D%nright = n

!  n=0
!  do j= 0,8
!    k = j*9+1
!    Mesh2D%quadleft(j+1)   = k
!    n=n+1
!  enddo
!  Mesh2D%nleft = n


  end subroutine createMeshGen2
